{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","protoTypes","PropTypes","string","isRequired","func","Header","title","showAdd","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","length","newTask","console","log","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e355cdd.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task!')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddTask.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.protoTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <div>\r\n      <header className='header'>\r\n        <h1>{title}</h1>\r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n  showAdd: PropTypes.bool.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nTask.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nTasks.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Tasks\r\n","// import React from 'react'\nimport { useState } from 'react'\nimport AddTask from './components/AddTask'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: 'Feb 5th at 2:30pm',\n      reminder: false,\n    },\n  ])\n\n  // Add Task\n  const addTask = (task) => {\n    // console.log(task)\n    const id = tasks[tasks.length - 1].id + 1\n    // console.log(id)\n    const newTask = { id, ...task }\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    // console.log('Delete', id)\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    // console.log('Reminder', id)\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks To Show'\n      )}\n    </div>\n  )\n}\n\n// class App extends React.Component {\n//   render() {\n//     return <h1>Hello From a Class! :)</h1>\n//   }\n// }\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}